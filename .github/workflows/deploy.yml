name: Deployment
on:
  push:
    branches:
      - CustomActions
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache and get dependency
        id: cached-deps-step
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false' #added to test if passing false to caching variable needed by the cistom action works
      - name: show action output
        run: echo "Cache used? ${{ steps.cached-deps-step.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache and get dependency
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache and get dependency
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy
        uses: './.github/actions/js-action-s3-deploy'
        with:
          bucket: gha-custom-action-js-deploy
          bucket-region: us-east-1
          dist-folder: ./dist
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: display live url
        run: |
          echo " live url : ${{ steps.deploy.outputs.website-url }}"    

  # information:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code #NOTE this is required coz github can't find the path on local machine but needs to get the code from repository 
  #       uses: actions/checkout@v3
  #     - name: 'display notice from js action' 
  #       uses: './.github/actions/js-action-s3-deploy'